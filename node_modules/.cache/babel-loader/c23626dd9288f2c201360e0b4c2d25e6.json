{"remainingRequest":"/Users/liuhaobo/Desktop/fe-lost-found/node_modules/babel-loader/lib/index.js!/Users/liuhaobo/Desktop/fe-lost-found/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liuhaobo/Desktop/fe-lost-found/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuhaobo/Desktop/fe-lost-found/src/components/changeCity/iselect.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liuhaobo/Desktop/fe-lost-found/src/components/changeCity/iselect.vue","mtime":1553307640821},{"path":"/Users/liuhaobo/Desktop/fe-lost-found/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuhaobo/Desktop/fe-lost-found/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liuhaobo/Desktop/fe-lost-found/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuhaobo/Desktop/fe-lost-found/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/liuhaobo/Desktop/fe-lost-found/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport _ from 'lodash';\nexport default {\n  data: function data() {\n    return {\n      province: [\"北京\", \"天津\", \"上海\", \"重庆\", \"河北\", \"山西\", \"辽宁\", \"吉林\", \"黑龙江\", \"江苏\", \"浙江\", \"安徽\", \"福建\", \"江西\", \"山东\", \"河南\", \"湖北\", \"湖南\", \"广东\", \"海南\", \"四川\", \"贵州\", \"云南\", \"陕西\", \"甘肃\", \"青海\", \"内蒙古\", \"广西\", \"西藏\", \"宁夏\", \"新疆维吾尔自治区\", \"香港\", \"澳门\", \"台湾\"],\n      pvalue: '',\n      city: [],\n      cityq: {\n        '北京': [\"东城区\", \"西城区\", \"崇文区\", \"宣武区\", \"朝阳区\", \"海淀区\", \"丰台区\", \"石景山区\", \"房山区\", \"通州区\", \"顺义区\", \"昌平区\", \"大兴区\", \"怀柔区\", \"平谷区\", \"门头沟区\", \"密云县\", \"延庆县\"],\n        天津: [\"和平区\", \"河东区\", \"河西区\", \"南开区\", \"河北区\", \"红桥区\", \"东丽区\", \"西青区\", \"北辰区\", \"津南区\", \"武清区\", \"宝坻区\", \"滨海新区\", \"静海县\", \"宁河县\", \"蓟县\"],\n        上海: [\"黄浦区\", \"卢湾区\", \"徐汇区\", \"长宁区\", \"静安区\", \"普陀区\", \"闸北区\", \"虹口区\", \"杨浦区\", \"闵行区\", \"宝山区\", \"嘉定区\", \"浦东新区\", \"金山区\", \"松江区\", \"青浦区\", \"奉贤区\", \"崇明县\"],\n        重庆: [\"渝中区\", \"大渡口区\", \"江北区\", \"南岸区\", \"北碚区\", \"渝北区\", \"巴南区\", \"长寿区\", \"双桥区\", \"沙坪坝区\", \"万盛区\", \"万州区\", \"涪陵区\", \"黔江区\", \"永川区\", \"合川区\", \"江津区\", \"九龙坡区\", \"南川区\", \"綦江县\", \"潼南县\", \"荣昌县\", \"璧山县\", \"大足县\", \"铜梁县\", \"梁平县\", \"开县\", \"忠县\", \"城口县\", \"垫江县\", \"武隆县\", \"丰都县\", \"奉节县\", \"云阳县\", \"巫溪县\", \"巫山县\", \"石柱土家族自治县\", \"秀山土家族苗族自治县\", \"酉阳土家族苗族自治县\", \"彭水苗族土家族自治县\"],\n        河北: [\"石家庄\", \"唐山\", \"秦皇岛\", \"邯郸\", \"邢台\", \"保定\", \"张家口\", \"承德\", \"沧州\", \"廊坊\", \"衡水\"],\n        山西: [\"太原\", \"大同\", \"阳泉\", \"长治\", \"晋城\", \"朔州\", \"晋中\", \"运城\", \"忻州\", \"临汾\", \"吕梁\"],\n        辽宁: [\"沈阳\", \"大连\", \"鞍山\", \"抚顺\", \"本溪\", \"丹东\", \"锦州\", \"营口\", \"阜新\", \"辽阳\", \"盘锦\", \"铁岭\", \"朝阳\", \"葫芦岛\"],\n        吉林: [\"长春\", \"吉林\", \"四平\", \"辽源\", \"通化\", \"白山\", \"松原\", \"白城\", \"延边朝鲜族自治州\"],\n        黑龙江: [\"哈尔滨\", \"齐齐哈尔\", \"鹤岗\", \"双鸭山\", \"鸡西\", \"大庆\", \"伊春\", \"牡丹江\", \"佳木斯\", \"七台河\", \"黑河\", \"绥化\", \"大兴安岭\"],\n        江苏: [\"南京\", \"苏州\", \"无锡\", \"常州\", \"镇江\", \"南通\", \"泰州\", \"扬州\", \"盐城\", \"连云港\", \"徐州\", \"淮安\", \"宿迁\"],\n        浙江: [\"杭州\", \"宁波\", \"温州\", \"嘉兴\", \"湖州\", \"绍兴\", \"金华\", \"衢州\", \"舟山\", \"台州\", \"丽水\"],\n        安徽: [\"合肥\", \"芜湖\", \"蚌埠\", \"淮南\", \"马鞍山\", \"淮北\", \"铜陵\", \"安庆\", \"黄山\", \"滁州\", \"阜阳\", \"宿州\", \"巢湖\", \"六安\", \"亳州\", \"池州\", \"宣城\"],\n        福建: [\"福州\", \"厦门\", \"莆田\", \"三明\", \"泉州\", \"漳州\", \"南平\", \"龙岩\", \"宁德\"],\n        江西: [\"南昌\", \"景德镇\", \"萍乡\", \"九江\", \"新余\", \"鹰潭\", \"赣州\", \"吉安\", \"宜春\", \"抚州\", \"上饶\"],\n        山东: [\"济南\", \"青岛\", \"淄博\", \"枣庄\", \"东营\", \"烟台\", \"潍坊\", \"济宁\", \"泰安\", \"威海\", \"日照\", \"莱芜\", \"临沂\", \"德州\", \"聊城\", \"滨州\", \"菏泽\"],\n        河南: [\"郑州\", \"开封\", \"洛阳\", \"平顶山\", \"安阳\", \"鹤壁\", \"新乡\", \"焦作\", \"濮阳\", \"许昌\", \"漯河\", \"三门峡\", \"南阳\", \"商丘\", \"信阳\", \"周口\", \"驻马店\"],\n        湖北: [\"武汉\", \"黄石\", \"十堰\", \"荆州\", \"宜昌\", \"襄樊\", \"鄂州\", \"荆门\", \"孝感\", \"黄冈\", \"咸宁\", \"随州\", \"恩施\"],\n        湖南: [\"长沙\", \"株洲\", \"湘潭\", \"衡阳\", \"邵阳\", \"岳阳\", \"常德\", \"张家界\", \"益阳\", \"郴州\", \"永州\", \"怀化\", \"娄底\", \"湘西\"],\n        广东: [\"广州\", \"深圳\", \"珠海\", \"汕头\", \"韶关\", \"佛山\", \"江门\", \"湛江\", \"茂名\", \"肇庆\", \"惠州\", \"梅州\", \"汕尾\", \"河源\", \"阳江\", \"清远\", \"东莞\", \"中山\", \"潮州\", \"揭阳\", \"云浮\"],\n        海南: [\"海口\", \"三亚\"],\n        四川: [\"成都\", \"自贡\", \"攀枝花\", \"泸州\", \"德阳\", \"绵阳\", \"广元\", \"遂宁\", \"内江\", \"乐山\", \"南充\", \"眉山\", \"宜宾\", \"广安\", \"达州\", \"雅安\", \"巴中\", \"资阳\", \"阿坝\", \"甘孜\", \"凉山\"],\n        贵州: [\"贵阳\", \"六盘水\", \"遵义\", \"安顺\", \"铜仁\", \"毕节\", \"黔西南\", \"黔东南\", \"黔南\"],\n        云南: [\"昆明\", \"曲靖\", \"玉溪\", \"保山\", \"昭通\", \"丽江\", \"普洱\", \"临沧\", \"德宏\", \"怒江\", \"迪庆\", \"大理\", \"楚雄\", \"红河\", \"文山\", \"西双版纳\"],\n        陕西: [\"西安\", \"铜川\", \"宝鸡\", \"咸阳\", \"渭南\", \"延安\", \"汉中\", \"榆林\", \"安康\", \"商洛\"],\n        甘肃: [\"兰州\", \"嘉峪关\", \"金昌\", \"白银\", \"天水\", \"武威\", \"酒泉\", \"张掖\", \"庆阳\", \"平凉\", \"定西\", \"陇南\", \"临夏\", \"甘南\"],\n        青海: [\"西宁\", \"海东\", \"海北\", \"海南\", \"黄南\", \"果洛\", \"玉树\", \"海西\"],\n        内蒙古: [\"呼和浩特\", \"包头\", \"乌海\", \"赤峰\", \"通辽\", \"鄂尔多斯\", \"呼伦贝尔\", \"巴彦淖尔\", \"乌兰察布\", \"锡林郭勒盟\", \"兴安盟\", \"阿拉善盟\"],\n        广西: [\"南宁\", \"柳州\", \"桂林\", \"梧州\", \"北海\", \"防城港\", \"钦州\", \"贵港\", \"玉林\", \"百色\", \"贺州\", \"河池\", \"来宾\", \"崇左\"],\n        西藏: [\"拉萨\", \"那曲\", \"昌都\", \"林芝\", \"山南\", \"日喀则\", \"阿里\"],\n        宁夏: [\"银川\", \"石嘴山\", \"吴忠\", \"固原\", \"中卫\"],\n        新疆维吾尔自治区: [\"乌鲁木齐\", \"克拉玛依\", \"吐鲁番\", \"哈密\", \"和田\", \"阿克苏\", \"喀什\", \"克孜勒苏\", \"巴音郭楞\", \"昌吉\", \"博尔塔拉\", \"伊犁\", \"塔城\", \"阿勒泰\"],\n        香港: [\"香港岛\", \"九龙东\", \"九龙西\", \"新界东\", \"新界西\"],\n        澳门: [\"澳门半岛\", \"离岛\"],\n        台湾: [\"台北\", \"高雄\", \"基隆\", \"新竹\", \"台中\", \"嘉义\", \"台南市\"]\n      },\n      cvalue: '',\n      input: '',\n      cities: []\n    };\n  },\n  watch: {\n    pvalue: function pvalue(newPvalue) {\n      console.log(newPvalue);\n      console.log(this.cityq.newPvalue);\n      this.city = this.cityq.newPvalue;\n    },\n    mounted: function () {\n      var _mounted = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function mounted() {\n        return _mounted.apply(this, arguments);\n      }\n\n      return mounted;\n    }(),\n    methods: {\n      querySearchAsync: _.debounce(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee2(query, cb) {\n          var self, _ref2, status, city;\n\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  self = this;\n\n                  if (!self.cities.length) {\n                    _context2.next = 5;\n                    break;\n                  }\n\n                  cb(self.cities.filter(function (item) {\n                    return item.value.indexOf(query) > -1;\n                  }));\n                  _context2.next = 11;\n                  break;\n\n                case 5:\n                  _context2.next = 7;\n                  return self.$axios.get('/geo/city');\n\n                case 7:\n                  _ref2 = _context2.sent;\n                  status = _ref2.status;\n                  city = _ref2.data.city;\n\n                  if (status === 200) {\n                    self.cities = city.map(function (item) {\n                      return {\n                        value: item.name\n                      };\n                    });\n                    cb(self.cities.filter(function (item) {\n                      return item.value.indexOf(query) > -1;\n                    }));\n                  } else {\n                    cb([]);\n                  }\n\n                case 11:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }(), 200),\n      handleSelect: function handleSelect(item) {\n        console.log(item.value);\n      }\n    }\n  }\n};",{"version":3,"sources":["iselect.vue"],"names":[],"mappings":"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,CAAA;AAAA,QAAA,EAAA,EAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CAAA;AAAA,QAAA,EAAA,EAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CAAA;AAAA,QAAA,EAAA,EAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CAAA;AAAA,QAAA,EAAA,EAAA,CAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CAAA;AAAA,QAAA,EAAA,EAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CAAA;AAAA,QAAA,EAAA,EAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,CAAA;AAAA,QAAA,EAAA,EAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CAAA;AAAA,QAAA,EAAA,EAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CAAA;AAAA,QAAA,EAAA,EAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CAAA;AAAA,QAAA,EAAA,EAAA,CAAA,IAAA,EAAA,IAAA,CAAA;AAAA,QAAA,EAAA,EAAA,CAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CAAA;AAAA,QAAA,EAAA,EAAA,CAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,CAAA;AAAA,QAAA,EAAA,EAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,CAAA;AAAA,QAAA,EAAA,EAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CAAA;AAAA,QAAA,EAAA,EAAA,CAAA,IAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CAAA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","sourcesContent":["<template>\n  <div class=\"m-iselect\">\n    <span class=\"name\">按省份选择:</span>\n    <el-select\n      v-model=\"pvalue\"\n      placeholder=\"省份\">\n      <el-option\n        v-for=\"item in province\"\n        :key=\"item.value\"\n        :label=\"item.label\"\n        :value=\"item\"/>\n    </el-select>\n    <el-select\n      v-model=\"cvalue\"\n      :disabled=\"!city.length\"\n      placeholder=\"城市\">\n      <el-option\n        v-for=\"item in city\"\n        :key=\"item.value\"\n        :label=\"item.label\"\n        :value=\"item.value\"/>\n    </el-select>\n    <el-autocomplete\n      v-model=\"input\"\n      :fetch-suggestions=\"querySearchAsync\"\n      placeholder=\"请输入城市中文或拼音\"\n      @select=\"handleSelect\"\n    />\n  </div>\n</template>\n\n<script>\nimport _ from 'lodash';\nexport default {\n  data(){\n    return {\n      province:[\"北京\",\"天津\",\"上海\",\"重庆\",\"河北\",\"山西\",\"辽宁\",\"吉林\",\"黑龙江\",\"江苏\",\"浙江\",\"安徽\",\"福建\",\"江西\",\"山东\",\"河南\",\"湖北\",\"湖南\",\"广东\",\"海南\",\"四川\",\"贵州\",\"云南\",\"陕西\",\"甘肃\",\"青海\",\"内蒙古\",\"广西\",\"西藏\",\"宁夏\",\"新疆维吾尔自治区\",\"香港\",\"澳门\",\"台湾\"],\n      pvalue:'',\n      city: [],\n      cityq:{'北京':[\"东城区\",\"西城区\",\"崇文区\",\"宣武区\",\"朝阳区\",\"海淀区\",\"丰台区\",\"石景山区\",\"房山区\",\"通州区\",\"顺义区\",\"昌平区\",\"大兴区\",\"怀柔区\",\"平谷区\",\"门头沟区\",\"密云县\",\"延庆县\"],天津:[\"和平区\",\"河东区\",\"河西区\",\"南开区\",\"河北区\",\"红桥区\",\"东丽区\",\"西青区\",\"北辰区\",\"津南区\",\"武清区\",\"宝坻区\",\"滨海新区\",\"静海县\",\"宁河县\",\"蓟县\"],上海:[\"黄浦区\",\"卢湾区\",\"徐汇区\",\"长宁区\",\"静安区\",\"普陀区\",\"闸北区\",\"虹口区\",\"杨浦区\",\"闵行区\",\"宝山区\",\"嘉定区\",\"浦东新区\",\"金山区\",\"松江区\",\"青浦区\",\"奉贤区\",\"崇明县\"],重庆:[\"渝中区\",\"大渡口区\",\"江北区\",\"南岸区\",\"北碚区\",\"渝北区\",\"巴南区\",\"长寿区\",\"双桥区\",\"沙坪坝区\",\"万盛区\",\"万州区\",\"涪陵区\",\"黔江区\",\"永川区\",\"合川区\",\"江津区\",\"九龙坡区\",\"南川区\",\"綦江县\",\"潼南县\",\"荣昌县\",\"璧山县\",\"大足县\",\"铜梁县\",\"梁平县\",\"开县\",\"忠县\",\"城口县\",\"垫江县\",\"武隆县\",\"丰都县\",\"奉节县\",\"云阳县\",\"巫溪县\",\"巫山县\",\"石柱土家族自治县\",\"秀山土家族苗族自治县\",\"酉阳土家族苗族自治县\",\"彭水苗族土家族自治县\"],河北:[\"石家庄\",\"唐山\",\"秦皇岛\",\"邯郸\",\"邢台\",\"保定\",\"张家口\",\"承德\",\"沧州\",\"廊坊\",\"衡水\"],山西:[\"太原\",\"大同\",\"阳泉\",\"长治\",\"晋城\",\"朔州\",\"晋中\",\"运城\",\"忻州\",\"临汾\",\"吕梁\"],辽宁:[\"沈阳\",\"大连\",\"鞍山\",\"抚顺\",\"本溪\",\"丹东\",\"锦州\",\"营口\",\"阜新\",\"辽阳\",\"盘锦\",\"铁岭\",\"朝阳\",\"葫芦岛\"],吉林:[\"长春\",\"吉林\",\"四平\",\"辽源\",\"通化\",\"白山\",\"松原\",\"白城\",\"延边朝鲜族自治州\"],黑龙江:[\"哈尔滨\",\"齐齐哈尔\",\"鹤岗\",\"双鸭山\",\"鸡西\",\"大庆\",\"伊春\",\"牡丹江\",\"佳木斯\",\"七台河\",\"黑河\",\"绥化\",\"大兴安岭\"],江苏:[\"南京\",\"苏州\",\"无锡\",\"常州\",\"镇江\",\"南通\",\"泰州\",\"扬州\",\"盐城\",\"连云港\",\"徐州\",\"淮安\",\"宿迁\"],浙江:[\"杭州\",\"宁波\",\"温州\",\"嘉兴\",\"湖州\",\"绍兴\",\"金华\",\"衢州\",\"舟山\",\"台州\",\"丽水\"],安徽:[\"合肥\",\"芜湖\",\"蚌埠\",\"淮南\",\"马鞍山\",\"淮北\",\"铜陵\",\"安庆\",\"黄山\",\"滁州\",\"阜阳\",\"宿州\",\"巢湖\",\"六安\",\"亳州\",\"池州\",\"宣城\"],福建:[\"福州\",\"厦门\",\"莆田\",\"三明\",\"泉州\",\"漳州\",\"南平\",\"龙岩\",\"宁德\"],江西:[\"南昌\",\"景德镇\",\"萍乡\",\"九江\",\"新余\",\"鹰潭\",\"赣州\",\"吉安\",\"宜春\",\"抚州\",\"上饶\"],山东:[\"济南\",\"青岛\",\"淄博\",\"枣庄\",\"东营\",\"烟台\",\"潍坊\",\"济宁\",\"泰安\",\"威海\",\"日照\",\"莱芜\",\"临沂\",\"德州\",\"聊城\",\"滨州\",\"菏泽\"],河南:[\"郑州\",\"开封\",\"洛阳\",\"平顶山\",\"安阳\",\"鹤壁\",\"新乡\",\"焦作\",\"濮阳\",\"许昌\",\"漯河\",\"三门峡\",\"南阳\",\"商丘\",\"信阳\",\"周口\",\"驻马店\"],湖北:[\"武汉\",\"黄石\",\"十堰\",\"荆州\",\"宜昌\",\"襄樊\",\"鄂州\",\"荆门\",\"孝感\",\"黄冈\",\"咸宁\",\"随州\",\"恩施\"],湖南:[\"长沙\",\"株洲\",\"湘潭\",\"衡阳\",\"邵阳\",\"岳阳\",\"常德\",\"张家界\",\"益阳\",\"郴州\",\"永州\",\"怀化\",\"娄底\",\"湘西\"],广东:[\"广州\",\"深圳\",\"珠海\",\"汕头\",\"韶关\",\"佛山\",\"江门\",\"湛江\",\"茂名\",\"肇庆\",\"惠州\",\"梅州\",\"汕尾\",\"河源\",\"阳江\",\"清远\",\"东莞\",\"中山\",\"潮州\",\"揭阳\",\"云浮\"],海南:[\"海口\",\"三亚\"],四川:[\"成都\",\"自贡\",\"攀枝花\",\"泸州\",\"德阳\",\"绵阳\",\"广元\",\"遂宁\",\"内江\",\"乐山\",\"南充\",\"眉山\",\"宜宾\",\"广安\",\"达州\",\"雅安\",\"巴中\",\"资阳\",\"阿坝\",\"甘孜\",\"凉山\"],贵州:[\"贵阳\",\"六盘水\",\"遵义\",\"安顺\",\"铜仁\",\"毕节\",\"黔西南\",\"黔东南\",\"黔南\"],云南:[\"昆明\",\"曲靖\",\"玉溪\",\"保山\",\"昭通\",\"丽江\",\"普洱\",\"临沧\",\"德宏\",\"怒江\",\"迪庆\",\"大理\",\"楚雄\",\"红河\",\"文山\",\"西双版纳\"],陕西:[\"西安\",\"铜川\",\"宝鸡\",\"咸阳\",\"渭南\",\"延安\",\"汉中\",\"榆林\",\"安康\",\"商洛\"],甘肃:[\"兰州\",\"嘉峪关\",\"金昌\",\"白银\",\"天水\",\"武威\",\"酒泉\",\"张掖\",\"庆阳\",\"平凉\",\"定西\",\"陇南\",\"临夏\",\"甘南\"],青海:[\"西宁\",\"海东\",\"海北\",\"海南\",\"黄南\",\"果洛\",\"玉树\",\"海西\"],内蒙古:[\"呼和浩特\",\"包头\",\"乌海\",\"赤峰\",\"通辽\",\"鄂尔多斯\",\"呼伦贝尔\",\"巴彦淖尔\",\"乌兰察布\",\"锡林郭勒盟\",\"兴安盟\",\"阿拉善盟\"],广西:[\"南宁\",\"柳州\",\"桂林\",\"梧州\",\"北海\",\"防城港\",\"钦州\",\"贵港\",\"玉林\",\"百色\",\"贺州\",\"河池\",\"来宾\",\"崇左\"],西藏:[\"拉萨\",\"那曲\",\"昌都\",\"林芝\",\"山南\",\"日喀则\",\"阿里\"],宁夏:[\"银川\",\"石嘴山\",\"吴忠\",\"固原\",\"中卫\"],新疆维吾尔自治区:[\"乌鲁木齐\",\"克拉玛依\",\"吐鲁番\",\"哈密\",\"和田\",\"阿克苏\",\"喀什\",\"克孜勒苏\",\"巴音郭楞\",\"昌吉\",\"博尔塔拉\",\"伊犁\",\"塔城\",\"阿勒泰\"],香港:[\"香港岛\",\"九龙东\",\"九龙西\",\"新界东\",\"新界西\"],澳门:[\"澳门半岛\",\"离岛\"],台湾:[\"台北\",\"高雄\",\"基隆\",\"新竹\",\"台中\",\"嘉义\",\"台南市\"]},\n      cvalue:'',\n      input:'',\n      cities:[]\n    }\n  },\n  watch:{\n    pvalue (newPvalue){\n      console.log(newPvalue)\n      console.log(this.cityq.newPvalue)\n\n      this.city = this.cityq.newPvalue\n  },\n  mounted:async function(){\n    // let self=this;\n    // let {status,data:{province}}=await self.$axios.get('/geo/province')\n    // if(status===200){\n    //   self.province=province.map(item=>{\n    //     return {\n    //       value:item.id,\n    //       label:item.name\n    //     }\n    //   })\n    // }\n  },\n  methods:{\n    querySearchAsync:_.debounce(async function(query,cb){\n      let self=this;\n      if(self.cities.length){\n        cb(self.cities.filter(item => item.value.indexOf(query)>-1))\n      }else{\n        let {status,data:{city}}=await self.$axios.get('/geo/city')\n        if(status===200){\n          self.cities=city.map(item=>{return {\n            value:item.name\n          }})\n          cb(self.cities.filter(item => item.value.indexOf(query)>-1))\n        }else{\n          cb([])\n        }\n      }\n    },200),\n    handleSelect:function(item){\n      console.log(item.value);\n    }\n  }\n}\n}\n</script>\n\n<style lang=\"scss\">\n  .page-changeCity{\n  width: 1190px;\n  box-sizing: border-box;\n  margin: 20px auto 0;\n  background-color: #fff;\n  border: 1px solid #E5E5E5;\n  border-radius: 4px;\n  min-height: 1000px;\n  padding: 20px;\n  .m-iselect {\n    .province {\n      cursor: pointer;\n      border-radius: 4px;\n      margin: 0 10px 0 20px;\n    }\n\n    .city {\n      cursor: not-allowed;\n      border-radius: 4px;\n      margin: 0 20px 0 10px;\n    }\n\n    .label {\n      margin-left: 40px;\n    }\n\n    .input {\n      width: 220px;\n      height: 40px;\n      border-radius: 4px;\n      margin-left: 10px;\n      font-size: 14px;\n      color: #666;\n      box-sizing: border-box;\n    }\n  }\n  .el-row {\n    padding-bottom: 20px;\n    &:after{\n      content: ' ';\n      height: 1px;\n      width: 100%;\n      border-bottom: 1px solid #E5E5E5;\n      padding-top: 20px;\n    }\n  }\n}\n\n</style>\n"],"sourceRoot":"src/components/changeCity"}]}