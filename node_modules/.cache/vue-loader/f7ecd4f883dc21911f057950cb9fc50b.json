{"remainingRequest":"/Users/liuhaobo/Desktop/fe-lost-found/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuhaobo/Desktop/fe-lost-found/src/components/upload/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liuhaobo/Desktop/fe-lost-found/src/components/upload/index.vue","mtime":1553420104684},{"path":"/Users/liuhaobo/Desktop/fe-lost-found/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuhaobo/Desktop/fe-lost-found/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liuhaobo/Desktop/fe-lost-found/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuhaobo/Desktop/fe-lost-found/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name: 'upload',\n    data(){\n        return{\n            avatar: '',\n            file: '',\n            showBg: false\n        }\n    },\n    props: [\"uploadType\", \"imgUrl\", \"imgWidth\", \"imgHeight\"],\n    created(){\n        this.avatar = this.imgUrl\n    },\n    methods: {\n        changeImage: function(e){\n            console.log(e)\n            let file = e.target.files[0];\n            if(file) {\n                this.file = file\n                console.log(this.file)\n                let reader = new FileReader()\n                let that = this\n                reader.readAsDataURL(file)\n                reader.onload= function(e){\n                    // 这里的this 指向reader\n                    that.avatar = this.result\n                }\n            }\n        },\n       upload: function(){\n          let files = this.$refs.avatarInput.files\n          let fileData = {}\n          if(files instanceof Array) {\n            fileData = files[0]\n          } else {\n            fileData = this.file\n          }\n          // console.log('fileData', typeof fileData, fileData)\n          let data = new FormData()\n          data.append('multfile', fileData)\n          data.append('operaType', this.uploadType)\n          this.$store.dispatch('UPLOAD_HEAD', data)\n          .then(res => {\n            console.log(res)\n            this.file = '';\n            let data = res.data.data;\n            this.$emit(\"upload\", data );\n              this.$message({\n                type: \"success\",\n                message: \"上传成功！\"\n              })\n          }).catch(err => {\n            console.log(err)\n            if(err.data.msg){\n              this.$message({\n                type: \"error\",\n                message: err.data.msg\n              })\n            }else {\n              this.$message({\n                type: \"error\",\n                message: \"上传失败\"\n              })\n            }\n          })\n        }\n    }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/upload","sourcesContent":["\n<template>\n    <div class=\"avatar\">\n        <div >\n            <div class=\"bg\" :style=\"`line-height:${imgHeight}`\">点击上传</div>\n            <input type=\"file\" class=\"input-file\" :style=\"`width:${imgWidth};height:${imgHeight};`\" name=\"avatar\" ref=\"avatarInput\" @change=\"changeImage($event)\" accept=\"image/gif,image/jpeg,image/jpg,image/png\">\n            <img src=\"\" alt=\"\" :style=\"`width:${imgWidth};height: ${imgHeight};`\" name=\"avatar\">\n        </div>\n        <div class=\"text\" @click=\"upload\" v-if=\"file\">确定上传</div>\n    </div>\n</template>\n\n<script>\nexport default {\n    name: 'upload',\n    data(){\n        return{\n            avatar: '',\n            file: '',\n            showBg: false\n        }\n    },\n    props: [\"uploadType\", \"imgUrl\", \"imgWidth\", \"imgHeight\"],\n    created(){\n        this.avatar = this.imgUrl\n    },\n    methods: {\n        changeImage: function(e){\n            console.log(e)\n            let file = e.target.files[0];\n            if(file) {\n                this.file = file\n                console.log(this.file)\n                let reader = new FileReader()\n                let that = this\n                reader.readAsDataURL(file)\n                reader.onload= function(e){\n                    // 这里的this 指向reader\n                    that.avatar = this.result\n                }\n            }\n        },\n       upload: function(){\n          let files = this.$refs.avatarInput.files\n          let fileData = {}\n          if(files instanceof Array) {\n            fileData = files[0]\n          } else {\n            fileData = this.file\n          }\n          // console.log('fileData', typeof fileData, fileData)\n          let data = new FormData()\n          data.append('multfile', fileData)\n          data.append('operaType', this.uploadType)\n          this.$store.dispatch('UPLOAD_HEAD', data)\n          .then(res => {\n            console.log(res)\n            this.file = '';\n            let data = res.data.data;\n            this.$emit(\"upload\", data );\n              this.$message({\n                type: \"success\",\n                message: \"上传成功！\"\n              })\n          }).catch(err => {\n            console.log(err)\n            if(err.data.msg){\n              this.$message({\n                type: \"error\",\n                message: err.data.msg\n              })\n            }else {\n              this.$message({\n                type: \"error\",\n                message: \"上传失败\"\n              })\n            }\n          })\n        }\n    }\n}\n</script>\n\n\n<style lang=\"scss\" scope>\n.avatar {\n    cursor: pointer;\n    position: relative;\n    .input-file {\n        position: absolute;\n        top: 0;\n        left: 0;\n        opacity: 0;\n        cursor: pointer;\n    }\n    .bg {\n        width: 100%;\n        height: 100%;\n        color: #000;\n        text-align: center;\n        background-color: #fff;\n        border: 1px dashed #000;\n        cursor: pointer;\n        position: absolute;\n        top: 0;\n        left: 0;\n \n    }\n    .text {\n        padding-top: 10px;\n        color: #000;\n    }\n}\n</style>"]}]}